#!/usr/bin/env python
#-*- coding: utf-8
import argparse, ConfigParser, os, sys, androidsdktool

parser = argparse.ArgumentParser(description='Onesdk command line tool')
parser.add_argument('channel', help='渠道名称')
parser.add_argument('platform', help='平台名称', choices=['ios', 'android'])
parser.add_argument('filename', help='支持apk或ipa的解压目录，支持.apk或.ipa文件')
args = parser.parse_args()

config = ConfigParser.ConfigParser()
config.read('/usr/local/onesdk/onesdk.conf')
origin_package_name_string = 'origin-package-name'
product_name_string = 'product-name'
sdk_dir = os.path.join(config.get('env', 'sdks-path'), args.channel)

def getChannelId():
	return config.get('channels-id', args.channel)

def getPackageName(origin_package_name):
	name = config.get('package-names', args.channel)
	if origin_package_name_string in name:
		return name.replace('{'+origin_package_name_string+'}', origin_package_name)
	if product_name_string in name:
		## for example: com.tencent.ffom -> product_name: ffom
		product_name = origin_package_name[origin_package_name.rfind('.')+1:]
		return name.replace('{'+product_name_string+'}', product_name)

def androidonesdk():
	unzip_folder = args.filename
	isUnzipFolder = os.path.isdir(unzip_folder)
	if not isUnzipFolder:
		unzip_folder = androidsdktool.unpack_apk(unzip_folder)
	androidSDKTool = androidsdktool.AndroidSdkTool(unzip_folder)

	# add channel id
	channelId = getChannelId()
	androidSDKTool.manifestAddMetadata('channel_id', str(channelId))

	# change package name
	origin_package_name = androidSDKTool.getPackageName()
	packageName = getPackageName(origin_package_name)
	androidSDKTool.changePackageName(packageName)

	# add sdk plugin
	for f in os.listdir(sdk_dir):
		source_file = os.path.join(sdk_dir, f)
		if os.path.isdir(source_file):
			androidSDKTool.copyFolder(source_file, f)
		elif '.jar' in f:
			androidSDKTool.addJar(source_file)
		elif 'AndroidManifest.xml' == f:
			androidSDKTool.manifestMerge(source_file)
	if not isUnzipFolder:
		androidsdktool.pack_apk(args.filename)

if args.platform == 'android':
	androidonesdk()

if args.platform == 'ios':
	print("onesdk for ios not implemented yet");

